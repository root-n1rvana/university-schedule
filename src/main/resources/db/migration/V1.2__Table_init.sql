CREATE TYPE role_name AS ENUM ('admin', 'student', 'professor');

CREATE TABLE role
(
    role_id   int GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    role_name role_name
);

CREATE TABLE groups
(
    group_id   int GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    group_name VARCHAR(10) UNIQUE
);

CREATE TABLE users
(
    user_id       int GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    user_name     VARCHAR(50),
    user_lastname VARCHAR(50),
    role_id       INTEGER NOT NULL REFERENCES role (role_id)
);

CREATE TABLE courses
(
    course_id          int GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    course_name        VARCHAR(20),
    course_description VARCHAR(100)
);

CREATE TABLE rooms
(
    room_id          int GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    room_label       VARCHAR(10) UNIQUE,
    room_description VARCHAR(100)
);

CREATE TYPE lesson_time AS ENUM ('8:00-9:30', '9:45-11:15', '11:30-13:00', '13:30-15:00', '15:15-16:45');

CREATE TABLE lessons_time
(
    lesson_time_id int GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    lesson_time    lesson_time NOT NULL
);

CREATE TABLE schedules
(
    schedule_id    int GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    schedule_date  DATE,
    lesson_time_id INTEGER NOT NULL REFERENCES lessons_time (lesson_time_id)
);

CREATE TABLE lessons
(
    lesson_id   int GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    course_id   INTEGER NOT NULL REFERENCES courses (course_id),
    room_id     INTEGER NOT NULL REFERENCES rooms (room_id),
    group_id    INTEGER NOT NULL REFERENCES groups (group_id),
    schedule_id INTEGER NOT NULL REFERENCES schedules (schedule_id)
);

CREATE TABLE users_courses
(
    user_id   int REFERENCES users (user_id) ON UPDATE CASCADE ON DELETE CASCADE,
    course_id int REFERENCES courses (course_id) ON UPDATE CASCADE ON DELETE CASCADE,
    CONSTRAINT user_course UNIQUE (user_id, course_id)
);

CREATE TABLE users_groups
(
    user_id  int REFERENCES users (user_id) ON UPDATE CASCADE ON DELETE CASCADE,
    group_id int REFERENCES groups (group_id) ON UPDATE CASCADE ON DELETE CASCADE,
    CONSTRAINT user_group UNIQUE (user_id, group_id)
);
